#pragma once

//-----------------------------------------------------------------------------------------
// define
//-----------------------------------------------------------------------------------------
#define DIRECTINPUT_VERSION 0x0800 // DirectInputのversion指定

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
#include <dinput.h>
#include <cstdint>

//-----------------------------------------------------------------------------------------
// comment
//-----------------------------------------------------------------------------------------
#pragma comment(lib, "dinput8.lib")
#pragma comment(lib, "dxguid.lib")

////////////////////////////////////////////////////////////////////////////////////////////
// Input class
////////////////////////////////////////////////////////////////////////////////////////////
class Input {
public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	void Init(const HINSTANCE& hInst, const HWND& hWnd);

	void Term();

	void Update();

	bool IsPressKey(uint8_t dik) const;

	bool IsTriggerKey(uint8_t dik) const;

	bool IsReleaseKey(uint8_t dik) const;

	static Input* GetInstance();

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	IDirectInput8* directInput_ = nullptr;

	IDirectInputDevice8* keyboard_ = nullptr;

	static const uint32_t kMaxKey_ = 256;
	BYTE key_[kMaxKey_];
	BYTE preKey_[kMaxKey_];

};