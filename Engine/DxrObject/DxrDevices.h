#pragma once

//*****************************************************************************************
// DxrObject namespace で作られたクラスや関数は
// DXR(DirectXRaytracing)を使うために作られたもの
// DxObjectとはまったくもって別物. 
//*****************************************************************************************

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
// directX
#include <d3d12.h>
#include <dxgi1_6.h>
#include <dxgidebug.h>

// c++
#include <cstdint>
#include <cassert>

// ComPtr
#include <ComPtr.h>

//-----------------------------------------------------------------------------------------
// comment
//-----------------------------------------------------------------------------------------
#pragma comment(lib, "d3d12.lib")
#pragma comment(lib, "dxgi.lib")
#pragma comment(lib, "dxguid.lib")

////////////////////////////////////////////////////////////////////////////////////////////
// DxrObject namespace
////////////////////////////////////////////////////////////////////////////////////////////
namespace DxrObject {

	////////////////////////////////////////////////////////////////////////////////////////////
	// Devices class
	////////////////////////////////////////////////////////////////////////////////////////////
	class Devices {
	public:

		//=========================================================================================
		// public methods
		//=========================================================================================

		//! @brief コンストラクタ
		Devices() { Init(); }

		//! @brief デストラクタ
		~Devices() { Term(); }

		//! @brief 初期化
		void Init();

		//! @brief 終了処理
		void Term();

	private:

		//=========================================================================================
		// private methods
		//=========================================================================================

		ComPtr<ID3D12Debug1> debugController_;

		ComPtr<IDXGIFactory7> dxgiFactory_;
		ComPtr<IDXGIAdapter4> useAdapter_;

		ComPtr<ID3D12Device5> device_;

	};

}