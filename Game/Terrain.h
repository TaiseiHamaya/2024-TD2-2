#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
// c++
#include <memory>

// DxObject
#include <DxBufferResource.h>

#include <Model.h>

//-----------------------------------------------------------------------------------------
// forward
//-----------------------------------------------------------------------------------------
class Light;

////////////////////////////////////////////////////////////////////////////////////////////
// Terrain class
////////////////////////////////////////////////////////////////////////////////////////////
class Terrain {
public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	Terrain() { Init(); }

	~Terrain() { Term(); }

	void Init();

	void Draw(Light* light);

	void Term();

	void SetOnImGui();

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	// model
	std::unique_ptr<Model> model_;

	// resource
	std::unique_ptr<DxObject::BufferResource<TransformationMatrix>> matrixResource_;
	Transform transform_;

	std::unique_ptr<DxObject::BufferPtrResource<Material>> materialResource_;
	Material material_;

};