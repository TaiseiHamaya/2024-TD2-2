#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
// object
#include <RayTracingObject.h>

// Model
#include <Model.h>

// Attribute
#include <Attribute.h>

////////////////////////////////////////////////////////////////////////////////////////////
// TileType enum
////////////////////////////////////////////////////////////////////////////////////////////
enum TileType {
	TILE_BLACK,
	TILE_WHITE
};

////////////////////////////////////////////////////////////////////////////////////////////
// Ground class
////////////////////////////////////////////////////////////////////////////////////////////
class Ground
	: public RayTracingObject
	, public Attribute {
public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	Ground() { Init(); }

	~Ground() { Term(); }

	void Init();

	void Term();

	void SetAttributeImGui() override;

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	// IA
	std::unique_ptr<Model> model_;

	TileType tileType_ = TILE_BLACK;

};